version: "3"


volumes:
  duckdns_config:
  portainer_data:
  onlyoffice_data:
  onlyoffice_custom:
  onlyoffice_lib:
  onlyoffice_postgresql:
  onlyoffice_rabbitmq:
  onlyoffice_redis:
  onlyoffice_log:


services:
  duckdns:
    container_name: "duckdns-${SUBDOMAINS}"
    env_file:
     - ./.env
    cap_add:
      - NET_ADMIN
    environment:
      - TOKEN="${TOKEN}"
      - TZ="${TZ}"
      - SUBDOMAINS="${SUBDOMAINS}"
    image: linuxserver/duckdns:latest
    restart: always
    volumes:
      - duckdns_config:/config


  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: jlesage/nginx-proxy-manager
    ports:
      - 443:4443/tcp
      - 80:8080/tcp
      - 8181:8181/tcp
    restart: always
    volumes:
      - ~/npm_config:/config:rw


  portainer-ce:
    container_name: portainer-ce
    image: portainer/portainer-ce
    ports:
      - 8000:8000/tcp
      - 9000:9000/tcp
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data


  mariadb:
    container_name: mariadb
    env_file:
     - ./.env
    environment:
      - TZ="${TZ}"
      - MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"
    image: linuxserver/mariadb
    restart: always
    volumes:
      - ~/mariadb_config:/config


  nextcloud:
    container_name: nextcloud
    env_file:
     - ./.env
    depends_on:
      - mariadb
    environment:
      - TZ="${TZ}"
    image: linuxserver/nextcloud:latest
    ports:
      - 4443:443/tcp
    restart: always
    volumes:
      - ~/nextcloud_config:/config
      - ~/nextcloud_data:/data


  onlyoffice:
    container_name: onlyoffice
    image: alehoho/oo-ce-docker-license
    restart: always
    ports:
      - "8080:80"
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_custom:/usr/share/fonts/truetype/custom
      - onlyoffice_lib:/var/lib/onlyoffice
      - onlyoffice_postgresql:/var/lib/postgresql
      - onlyoffice_rabbitmq:/var/lib/rabbitmq
      - onlyoffice_redis:/var/lib/redis
      - onlyoffice_log:/var/log/onlyoffice


  watchtower:
    command:
      - --cleanup
    container_name: watchtower
    expose:
      - 8080/tcp
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
